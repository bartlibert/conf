# adding options to common commands {{{
alias ls="ls --color=auto --group-directories-first"
alias grep="grep --color=auto"
alias rm="rm -i"
alias cp="cp -i"
alias mv="mv -i"
alias bc="bc -lq"
alias truecrypt="sudo truecrypt -t"
alias prove="prove -rj5"
alias cpan-outdated="cpan-outdated --mirror file://${HOME}/perl5/minicpan/"
alias netstat="netstat -a --inet --numeric-port"
# }}}
# games {{{
alias nao="(TERM=rxvt telnet nethack.alt.org)"
alias cao="(TERM=rxvt /usr/bin/ssh -C -i ${HOME}/.ssh/cao_key joshua@crawl.akrasiac.org)"
alias cdo="ssh -C -i ${HOME}/.ssh/cao_key crawl@crawl.develz.org"
alias scn="(TERM=xterm-color telnet slashem.crash-override.net)"
alias spork="telnet sporkhack.nineball.org"
alias cgoban="javaws http://files.gokgs.com/javaBin/cgoban.jnlp"
alias counterstrike="wine c:\\Program\ Files\\Sierra\\Half-Life\\hl.exe -game cstrike -console -numericping -nojoy -noipx"
alias halflife="wine c:\\Program\ Files\\Sierra\\Half-Life\\hl.exe" # -console breaks
alias starcraft='wine c:\\Program\ Files\ \(x86\)\\Starcraft\\StarCraft.exe'
# }}}
# termcast {{{
alias tc="telnet termcast.org"
# }}}
# shells {{{
alias bishamon='ssh bishamon'
alias apt="ssh ${USER}@apt.tozt.net"
alias jjaro="ssh ${USER}@jjaro.net"
alias tozt="ssh -t ${USER}@tozt.net tmux a"
alias henzell="ssh henzell@crawl.akrasiac.org"
# }}}
# tmux sessions {{{
alias main='tmux a -t main'
alias work='tmux a -t work'
alias docs='tmux a -t docs'
alias misc='tmux a -t misc'
# }}}
# other {{{
alias wgetff='wget --user-agent="Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.3) Gecko/20070404 Firefox/2.0.0.3"'
alias dotperl="rsync -av lib/* ${HOME}/perl5/local/"
alias clean_packages='sudo pacman -Rsn $(pacman -Qqdt)'
alias pm="find lib -type f | sort"
alias bootstrap_cpanm="wget -O- -q http://xrl.us/cpanm | perl - App::cpanminus"
alias v="vim -c 'call feedkeys(\"t\")'"
function web {
    local port=$1
    if [[ -z $port ]]; then
        plackup -MPlack::App::Directory -e'Plack::App::Directory->new'
    else
        plackup -MPlack::App::Directory -e'Plack::App::Directory->new' --port $port
    fi
}
function perldoc {
    # XXX bash specific
    if type cpandoc > /dev/null 2>&1; then
        cpandoc "$@"
    else
        command perldoc "$@"
    fi
}
alias pd=perldoc
function incoming {
    cpanm http://pause.cpan.org/incoming/$1.tar.gz
}
function webcam {
    local width=$1
    local height=$2
    if [[ -z $width ]];  then width=640;  fi
    if [[ -z $height ]]; then height=480; fi
    mplayer tv:// -tv driver=v4l2:width=${width}:height=${height}:device=/dev/video0 -fps 15 -vf screenshot
}
function webcam_record {
    local width=$1
    if [[ -z $width ]];  then width=640;  else shift; fi
    local height=$1
    if [[ -z $height ]]; then height=480; else shift; fi
    mencoder tv:// -tv driver=v4l2:width=${width}:height=${height}:device=/dev/video0:forceaudio:adevice=/dev/dsp -ovc lavc -oac mp3lame -lameopts cbr:br=64:mode=3 -o $1
}
function luado { # thanks rici
    local e=$1
    shift
    lua /dev/fd/3 $* 4<&0- <<<$e 3<&0- 0<&4-
}
function moose {
    perl -Moose -E "$*"
}
function setfont {
    printf '\e]710;%s\007\e]711;%s\007' "$1" "$1"
}
function mem_usage {
    ps -eo size,ucmd | sort -rn | head -n$([ -z "$1" ] && echo 20 || echo $1)
}
function opened_files {
    strace $* 2>&1 | grep -E '^open\('   | \
                     grep -v ENOENT      | \
                     grep -v O_DIRECTORY | \
                     cut -f2 -d"\"" | \
                     grep -vE '^/proc/'  | \
                     grep -v '^/sys/'    | \
                     grep -v '^/dev/'
}
function alert {
    echo "DISPLAY=$DISPLAY xmessage -center -default okay $1" | at $2
}
function nopaste_moose {
    nopaste --chan=#moose --services=Shadowcat --desc="$1"
}
function gist {
    nopaste --services=Gist --desc="$1"
}
function fm22avi {
    fceux --playmov $1.fm2 --sound 1 --soundq 1 --soundrate 48000 --nospritelim 1 --pal 0 --xscale 1 --yscale 1 --opengl 0 --special 0 $2 --videolog "mencoder - -o $1.avi -ovc x264 -x264encopts qp=0 -oac mp3lame -lameopts mode=3:preset=128 -noskip -nocache -mc 0 -aspect 4/3 NESVSETTINGS"
}
function pdfcat {
    local out=$1
    shift
    gs -q -sPAPERSIZE=letter -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=$out $*
}
function svup {
    svc -u "$HOME/.services/$1"
    svstat "$HOME/.services/$1"
}
function svdn {
    svc -d "$HOME/.services/$1"
    svstat "$HOME/.services/$1"
}
function svst {
    svstat "$HOME/.services/$1"
}
function pick_music {
    lastfm_export --user doyster --dsn dbi:SQLite:${HOME}/.tracks.sqlite
    sqlite3 ${HOME}/.tracks.sqlite "SELECT artist FROM tracks WHERE strftime('%s') - timestamp < 60*60*24*365 GROUP BY artist ORDER BY count(artist) * (strftime('%s') - max(timestamp)) DESC LIMIT $([ -z "$1" ] && echo 20 || echo $1)"
}
# }}}

# vim:ft=sh:
