servers = (
  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.net"; chatnet = "EFNet"; port = "6667"; },
  {
    address = "irc.perl.org";
    chatnet = "perl";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "bitlbee";
    port = "6667";
    autoconnect = "yes";
  },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  freenode = { type = "IRC"; };
  perl = { type = "IRC"; };
  bitlbee = { type = "IRC"; };
};

channels = (
  { 
    name = "##crawl-offtopic";
    chatnet = "freenode";
    autojoin = "yes";
  },
  { name = "##nethack-elite"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#interhack"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#moose"; chatnet = "perl"; autojoin = "yes"; },
  { name = "#kiokudb"; chatnet = "perl"; autojoin = "yes"; },
  { name = "#moose-cabal"; chatnet = "perl"; autojoin = "yes"; },
  { name = "#moose-dev"; chatnet = "perl"; autojoin = "yes"; },
  { name = "#devel-declare"; chatnet = "perl"; autojoin = "yes"; },
  { name = "#tmux"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#conkeror"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "##crawl"; chatnet = "freenode"; autojoin = "yes"; },
  #  { name = "#rodney"; chatnet = "freenode"; autojoin = "yes"; },
  #  { name = "#netmonster"; chatnet = "EFNet"; autojoin = "yes"; },
  #  { name = "#alephone"; chatnet = "freenode"; autojoin = "yes"; },
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "window";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  remove = "quote remove $C $0 :$1-";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        typing_notice = { };
        join_notice = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };
    chanact = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = { chanact = { priority = "10"; }; };
    };
  };
};
settings = {
  core = {
    real_name = "doy";
    user_name = "doy";
    nick = "doy";
    awaylog_level = "";
    awaylog_file = "";
  };
  "fe-common/core" = {
    autolog = "yes";
    autolog_path = "~/irclogs/$tag/${0}-%Y-%m.log";
    bell_beeps = "yes";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT ";
    activity_hide_level = "JOINS PARTS QUITS NICKS MODES";
    windows_auto_renumber = "no";
    window_history = "yes";
  };
  "perl/core/scripts" = {
    chanact_abbreviate_names = "2";
    chanact_show_all = "yes";
    gobots_filter_nicks = "Henzell,Gretell";
    nicklist_width = "13";
    chanact_chop_status = "yes";
    bitlbee_typing_allwin = "yes";
    chanact_display = "$H$N$T$M$C$S";
    bitlbee_send_typing = "yes";
  };
  "fe-text" = { autostick_split_windows = "no"; actlist_sort = "refnum"; };
  "irc/core" = { usermode = "+i"; };
};
logs = { };
hilights = ( { text = "doy"; nick = "yes"; word = "yes"; } );
notifies = { };
keyboard = ( );
windows = {
  1 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "##crawl-dev";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "##crawl-offtopic";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#interhack";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "##nethack-elite";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#moose";
        tag = "perl";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  6 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#moose-dev";
        tag = "perl";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  7 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#moose-cabal";
        tag = "perl";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  8 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#devel-declare";
        tag = "perl";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  9 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#ii";
        tag = "iinteractive";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  10 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#ii_discuss_models_to_death";
        tag = "iinteractive";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  11 = {
    items = (
      {
        type = "QUERY";
        chat_type = "IRC";
        name = "starlifesage";
        tag = "bitlbee";
      }
    );
  };
  12 = {
    items = (
      {
        type = "QUERY";
        chat_type = "IRC";
        name = "sazzyanjali";
        tag = "bitlbee";
      }
    );
  };
  13 = {
    items = (
      {
        type = "QUERY";
        chat_type = "IRC";
        name = "cb4nova";
        tag = "bitlbee";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  14 = {
    items = (
      {
        type = "QUERY";
        chat_type = "IRC";
        name = "hyposomnileptic";
        tag = "bitlbee";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  15 = {
    items = (
      {
        type = "QUERY";
        chat_type = "IRC";
        name = "skltte";
        tag = "bitlbee";
      }
    );
    sticky = "yes";
    parent = "50";
  };
  16 = {
    items = (
      {
        type = "QUERY";
        chat_type = "IRC";
        name = "stevan";
        tag = "iinteractive";
      }
    );
  };
  50 = { 
    immortal = "yes";
    name = "(status)";
    level = "ALL";
    sticky = "yes";
  };
  51 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "&bitlbee";
        tag = "bitlbee";
      }
    );
    sticky = "yes";
    parent = "50";
  };
};
mainwindows = { 50 = { first_line = "1"; lines = "34"; }; };
