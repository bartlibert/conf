[user]
	email = doy@tozt.net
	name = Jesse Luehrs
[alias]
	pushall = "!f() { for repo in origin github; do git push $repo \"$@\"; done; }; f"
	amend = !git add -p && git commit --amend
	record = !git add -p && git commit --verbose
	rebase-branch = !git rebase -i $(git merge-base master HEAD)
	diff-branch = !git diff master..HEAD
	log-branch = !git log master..HEAD
	review-branch = !git review master..HEAD
	review = "!f() { for rev in $(git rev-list --reverse \"$@\"); do git show $rev; done; }; f"
	unstage = reset -q HEAD
	info = remote show -n origin
	graph = log --graph --all --full-history --color --branches --decorate
	prune-all = !git remote | xargs -n 1 git remote prune
	alias = "!f() { local name=$1; shift; git config --global alias.$name \"$*\"; }; f"
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
	lg = log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %C(bold blue)%an %Cgreen(%cr)%Creset%n%s%n' --abbrev-commit --date=relative --stat=72
	lgs = log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %C(bold blue)%an %Cgreen(%cr)%Creset%n%s%n' --abbrev-commit --date=relative
	st = status -sb
	ch = "!f() { git cherry \"$@\" | grep -v '^-' | sed 's/^..//' | xargs -n1 git log --oneline -1 | cat | perl -ple 's/([^ ]+)/\\e[33m$1\\e[m/'; }; f"
	ff = merge --ff-only
	cc = cherry-pick
	rv = checkout -p
	re = rebase -i @{u}
	git = "!f() { git \"$@\"; }; f"
	vim = "!f() { vim \"$@\"; }; f"
[github]
	user = doy
[color]
	ui = auto
[core]
	excludesfile = /home/doy/.gitignore
[push]
	default = current
[branch]
	autosetuprebase = always
[merge]
	tool = vimdiff
	conflictstyle = diff3
[rebase]
	stat = true
	autosquash = true
[help]
	autocorrect = 5
[diff]
	renames = true
	mnemonicprefix = true
[advice]
	pushNonFastForward = false
	statusHints = false
	commitBeforeMerge = false
	resolveConflict = false
	detachedHead = false

; vim:ft=gitconfig:
